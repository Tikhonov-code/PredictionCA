//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CalvingPredict
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class DB_A4A060_csEntities : DbContext
    {
        public DB_A4A060_csEntities()
            : base("name=DB_A4A060_csEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<MeasData> MeasDatas { get; set; }
        public virtual DbSet<Prediction> Predictions { get; set; }
        public virtual DbSet<Bolu> Bolus { get; set; }
        public virtual DbSet<FarmCow> FarmCows { get; set; }
        public virtual DbSet<Farm> Farms { get; set; }
        public virtual DbSet<Log> Logs { get; set; }
    
        public virtual ObjectResult<SP_Farm_GetNameByAnimalID_Result> SP_Farm_GetNameByAnimalID(Nullable<int> animal_id)
        {
            var animal_idParameter = animal_id.HasValue ?
                new ObjectParameter("animal_id", animal_id) :
                new ObjectParameter("animal_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Farm_GetNameByAnimalID_Result>("SP_Farm_GetNameByAnimalID", animal_idParameter);
        }
    
        public virtual ObjectResult<SP_Predict_AnimalList_Result> SP_Predict_AnimalList(Nullable<System.DateTime> dt, Nullable<int> predictInterval)
        {
            var dtParameter = dt.HasValue ?
                new ObjectParameter("dt", dt) :
                new ObjectParameter("dt", typeof(System.DateTime));
    
            var predictIntervalParameter = predictInterval.HasValue ?
                new ObjectParameter("PredictInterval", predictInterval) :
                new ObjectParameter("PredictInterval", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Predict_AnimalList_Result>("SP_Predict_AnimalList", dtParameter, predictIntervalParameter);
        }
    
        public virtual ObjectResult<SP_Predict_GetTempByAnimalID_Result> SP_Predict_GetTempByAnimalID(Nullable<int> bolus_id, Nullable<System.DateTime> dt)
        {
            var bolus_idParameter = bolus_id.HasValue ?
                new ObjectParameter("bolus_id", bolus_id) :
                new ObjectParameter("bolus_id", typeof(int));
    
            var dtParameter = dt.HasValue ?
                new ObjectParameter("dt", dt) :
                new ObjectParameter("dt", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Predict_GetTempByAnimalID_Result>("SP_Predict_GetTempByAnimalID", bolus_idParameter, dtParameter);
        }
    
        public virtual ObjectResult<SP_Predict_GetGapsInInterval_Result> SP_Predict_GetGapsInInterval(Nullable<int> bolus_id, Nullable<System.DateTime> dt)
        {
            var bolus_idParameter = bolus_id.HasValue ?
                new ObjectParameter("bolus_id", bolus_id) :
                new ObjectParameter("bolus_id", typeof(int));
    
            var dtParameter = dt.HasValue ?
                new ObjectParameter("dt", dt) :
                new ObjectParameter("dt", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Predict_GetGapsInInterval_Result>("SP_Predict_GetGapsInInterval", bolus_idParameter, dtParameter);
        }
    
        public virtual ObjectResult<SP_Predict_GetGapsStatByAnimalID_Result> SP_Predict_GetGapsStatByAnimalID(Nullable<int> bolus_id, Nullable<System.DateTime> dt)
        {
            var bolus_idParameter = bolus_id.HasValue ?
                new ObjectParameter("bolus_id", bolus_id) :
                new ObjectParameter("bolus_id", typeof(int));
    
            var dtParameter = dt.HasValue ?
                new ObjectParameter("dt", dt) :
                new ObjectParameter("dt", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Predict_GetGapsStatByAnimalID_Result>("SP_Predict_GetGapsStatByAnimalID", bolus_idParameter, dtParameter);
        }
    
        public virtual ObjectResult<SP_Farm_GetNameByBolus_ID_Result> SP_Farm_GetNameByBolus_ID(Nullable<int> bolus_id)
        {
            var bolus_idParameter = bolus_id.HasValue ?
                new ObjectParameter("bolus_id", bolus_id) :
                new ObjectParameter("bolus_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Farm_GetNameByBolus_ID_Result>("SP_Farm_GetNameByBolus_ID", bolus_idParameter);
        }
    }
}
